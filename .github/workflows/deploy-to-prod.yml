name: Deploy to Prod with SSH Key

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: "Type 'yes' to confirm deployment to production"
        required: true
        default: "no"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout prod branch using SSH
      - name: Checkout prod branch
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Use SSH key instead of HTTPS

      # Step 2: Set up SSH for Git
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Step 3: Configure Git user
      - name: Configure Git User
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # Step 4: Merge main into prod
      - name: Merge main into prod
        run: |
          git fetch origin main
          git checkout prod
          git merge origin/main --allow-unrelated-histories -m "Manual deployment from main to prod"

      # Step 5: Push changes to prod branch using SSH
      - name: Push changes
        run: |
          git push origin prod
      # Step 6: Configure Databricks CLI
      - name: Configure Databricks CLI
        env:
          DATABRICKS_HOST: "https://adb-3549450377455778.18.azuredatabricks.net"  # Replace with your Databricks instance URL
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}  # Use the saved Databricks token
        run: |
          pip install databricks-cli
          databricks configure --token <<< "${DATABRICKS_HOST}\n${DATABRICKS_TOKEN}"

      # Step 7: Deploy Notebooks to Databricks
      - name: Upload Notebooks to Databricks
        run: |
          databricks workspace import_dir ./notebooks /Workspace/Repos/monika_kumar5@outlook.com/dev_project --overwrite
